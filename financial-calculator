import tkinter as tk #GUI function
import requests #function that can extract web data and allows IDE to read from
import bs4

NAME=""


#setup method to call later
def format_response(soup):
     lst = get_summary_board(soup)
     stock_price = (get_current_price(soup))
     print(stock_price)
     for i in lst:
         print(i[0], i[1])
     final_str = "%s \n" % lst
     return final_str

#web crawling method
def get_current_price(soup):
     stock_price = soup.find("div", attrs={"class": "My(6px) Pos(r) smartphone_Mt(6px)"}).find("span").getText()
     return stock_price

#web crawling method
def get_soup(name):
     text = requests.get("https://ca.finance.yahoo.com/quote/" + name).text
     soup = bs4.BeautifulSoup(text, "lxml")
     return soup

#web crawling method
def get_summary_board(soup):
     tag = soup.find("div", attrs={"id": "quote-summary"})
     infos = tag.find_all('td', attrs={"data-reactid": True})
     print(infos)
     lst = [(infos[i].text, infos[i + 1].text) for i in range(0,len(infos), 2)]
     print(lst)
     return lst

#printing out financial data from website to GUI
def financial_data(entry):
     global NAME, button_calculator
     button_calculator.config(state=tk.NORMAL)
     NAME = entry
     name = entry
     soup = get_soup(name)
     datas = get_summary_board(soup)
     for i in range(len(lst_label)):
         lst_label[i][0]['text']=str(datas[i][0])
         lst_label[i][1]['text'] = str(datas[i][1])
     #use for loop to print separately


#button method
def close_calculator(win):
     global button, button_calculator
     button.config(state=tk.NORMAL)
     button_calculator.config(state=tk.NORMAL)
     win.destroy()


#button inside the GUI to call on another window
def popup_bonus():
     #make buttons unusable
     global button, button_calculator
     button.config(state=tk.DISABLED)
     button_calculator.config(state=tk.DISABLED)
     #draw pane
     win = tk.Toplevel()
     win.protocol("WM_DELETE_WINDOW", lambda :close_calculator(win))
     win.wm_title("Investment Data")
     l1 = tk.Label(win, text="Enter current hold")
     l1.grid(row=0, column=0)
     e1 = tk.Entry(win)
     e1.grid(row=1, column=0)
     l2 = tk.Label(win, text="Enter purchase price")
     l2.grid(row=2, column=0)
     e2 = tk.Entry(win)
     e2.grid(row=3, column=0)
     l3 = tk.Label(win, text="Current Value")
     l4 = tk.Label(win, text="Total Investment")
     l3.grid(row=4, column=0)
     l4.grid(row=5, column=0)
     l5 = tk.Label(win, text="Status (Gain or Lose)")
     l5.grid(row=6, column=0)
     l6 = tk.Label(win, text="Current Price per share")
     l6.grid(row=7, column=0)
     b = tk.Button(win, text="Click to get insight!", command=lambda:financial_calculator(e1.get(), e2.get(), l3, l4, l5, l6))
     b.grid(row=8, column=0)


#formula for calculation
def financial_calculator(how_many, historical_holding, label_current, label_historical, label_status, label_price):
     historical = int(how_many) * int(historical_holding)
     current = int(how_many) * float(get_current_price(get_soup(NAME)).replace(",", ""))
     if current - historical > 0:
         status = "gain"
     else:
         status = "lose"
     label_current['text'] = "Current Value:" + str(current.__round__(2))
     label_historical['text'] = "Total investment:" +str(historical.__round__(2))
     label_status['text'] = "Status (gain or lose from investment):" + status
     label_price['text'] = "Current price per share: " + str(get_current_price(get_soup(NAME)))







                                               #main interface code
#canvas size
HEIGHT = 700
WIDTH = 800

#name the GUI
root = tk.Tk()

#give a name to GUI
root.title ("Financial calculator ")

#create a canvas as a based
canvas = tk.Canvas(root, height=HEIGHT, width = WIDTH)
canvas.pack()

frame = tk.Frame(root, bg='#80c1ff', bd=5)
frame.place(relx=0.5, rely=0.1, relwidth=0.75, relheight=0.1, anchor='n')

#create a text bar to prompted user
entry = tk.Entry(frame, font = 20)
entry.place(relwidth = 0.65, relheight=1)

#create a button to click
button = tk.Button(frame, text="Click to get financial results", font=40, command=lambda: financial_data(entry.get()))
button.place(relx=0.7, relheight=1, relwidth=0.3)

#create a button for calculator
button_calculator = tk.Button(root, text="Calculator", font=40, command=popup_bonus)
button_calculator.place(relx=0.7, rely=0.05)
button_calculator.config(state=tk.DISABLED)

lower_frame = tk.Frame(root,bg='#80c1ff', bd=10)
lower_frame.place(relx=0.1, rely=0.25, relheight=0.75, relwidth=0.8)

lst_label = []
for i in range(8):
     lst_label.append([])
     lst_label[-1].append(tk.Label(lower_frame))
     lst_label[-1][-1].place(relx=0.1, rely=0.2 + i*0.1, relwidth=0.2,relheight=0.1)
     lst_label[-1].append(tk.Label(lower_frame))
     lst_label[-1][-1].place(relx=0.3, rely=0.2 + i*0.1, relwidth=0.2,relheight=0.1)


for i in range(8):
     lst_label.append([])
     lst_label[-1].append(tk.Label(lower_frame))
     lst_label[-1][-1].place(relx=0.5, rely=0.2 + i*0.1, relwidth=0.2,relheight=0.1)
     lst_label[-1].append(tk.Label(lower_frame))
     lst_label[-1][-1].place(relx=0.7, rely=0.2 + i*0.1, relwidth=0.2,relheight=0.1)


#close GUI
root.mainloop()
